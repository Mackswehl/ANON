Team HAWDOGS
APCS1 pd02
Jude Grodesky, Maxwell Vale, Jackie Li
CW68 -- PPMP
2018-1-12

Part 1: Multiple Choice
1. C
2. B
3. D
4. E
5. E
6. B
7. A
8. A
9. C
10.D

Part 2: Short Response
11a.
public int nextTankToFill (int threshold) {
       int lowest = filler.getCurrentIndex();
       for (FuelTank i : tanks) {
       	   if (i.getFuelLevel() < threshold) {
	      if (i.getFuelLevel < tanks.get(lowest)) {
	      	 lowest = i;
	      }
	   }
       }
       return lowest;
}
11b.
public void moveToLocation (int locIndex) {
       int loc = filler.getCurrentIndex();
       int dist = 0;
       if (loc < locIndex) {
       	  dist = locIndex - loc;
       }
       else {
          dist = loc - locInddex;
       }

       if ((dist > locIndex) && isFacingRight()) {
       	  filler.changeDirection();
       }
       else if (dist < locIndex && !isFacingRight()) {
	  filler.changeDirection();
       }
       filler.moveForward(moves);
12a.
private void fillBlock(String str){
	int i = 0;
	for (int r = 0; r < numRows; r++) {
	    for (int c = 0; c < numColumns; c++) {
	    	letterblock[r][c] = str.substring(i, i+1);
		if (str.length() < r*c) {
		   letterblock[r][c] = "A";
		}
		else if (str.length() > r*c) {
		   break;
		}
		i++;
	    }
	}
}

12b.
private String encryptMessage(String message) {
	String word = "";
	int total = numColumns * numRows;
      	int call = message.length() / total;
      	if(message.equals("")) {
	   return word;
	}
	
	for (int i = 0; i < call; i++) {
	   String[][] l = new RouteCipher();
	   1.fillblock();
	   for (int c=0; c< 1.numColumns; c++) {
		word += 1.encryptBlock();
	   }
	}
       return word;
}